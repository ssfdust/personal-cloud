.TH  "httpd_selinux"  "8"  "22-04-03" "httpd" "SELinux Policy httpd"
.SH "NAME"
httpd_selinux \- Security Enhanced Linux Policy for the httpd processes
.SH "DESCRIPTION"

Security-Enhanced Linux secures the httpd processes via flexible mandatory access control.

The httpd processes execute with the httpd_t SELinux type. You can check if you have these processes running by executing the \fBps\fP command with the \fB\-Z\fP qualifier.

For example:

.B ps -eZ | grep httpd_t


.SH "ENTRYPOINTS"

The httpd_t SELinux type can be entered via the \fBhttpd_exec_t\fP file type.

The default entrypoint paths for the httpd_t domain are the following:

/usr/sbin/httpd(\.worker)?, /usr/sbin/apache(2)?, /usr/lib/apache-ssl/.+, /usr/sbin/apache-ssl(2)?, /usr/bin/caddy, /usr/sbin/nginx, /usr/sbin/thttpd, /usr/sbin/php-fpm, /usr/sbin/cherokee, /usr/sbin/lighttpd, /usr/sbin/httpd\.event, /usr/bin/mongrel_rails, /usr/sbin/htcacheclean
.SH PROCESS TYPES
SELinux defines process types (domains) for each process running on the system
.PP
You can see the context of a process using the \fB\-Z\fP option to \fBps\bP
.PP
Policy governs the access confined processes have to files.
SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
.PP
The following process types are defined for httpd:

.EX
.B httpd_t, httpd_helper_t, httpd_php_t, httpd_rotatelogs_t, httpd_suexec_t, httpd_sys_script_t, httpd_user_script_t, httpd_passwd_t, httpd_unconfined_script_t
.EE
.PP
Note:
.B semanage permissive -a httpd_t
can be used to make the process type httpd_t permissive. SELinux does not deny access to permissive process types, but the AVC (SELinux denials) messages are still generated.

.SH BOOLEANS
SELinux policy is customizable based on least access required.  httpd policy is extremely flexible and has several booleans that allow you to manipulate the policy and run httpd with the tightest access possible.


.PP
If you want to allow httpd to use built in scripting (usually php), you must turn on the httpd_builtin_scripting boolean. Enabled by default.

.EX
.B setsebool -P httpd_builtin_scripting 1

.EE

.PP
If you want to allow httpd to act as a FTP client connecting to the ftp port and ephemeral ports, you must turn on the httpd_can_connect_ftp boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_connect_ftp 1

.EE

.PP
If you want to allow httpd to connect to the ldap port, you must turn on the httpd_can_connect_ldap boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_connect_ldap 1

.EE

.PP
If you want to allow http daemon to connect to mythtv, you must turn on the httpd_can_connect_mythtv boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_connect_mythtv 1

.EE

.PP
If you want to allow http daemon to connect to zabbix, you must turn on the httpd_can_connect_zabbix boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_connect_zabbix 1

.EE

.PP
If you want to allow HTTPD scripts and modules to connect to the network using TCP, you must turn on the httpd_can_network_connect boolean. Enabled by default.

.EX
.B setsebool -P httpd_can_network_connect 1

.EE

.PP
If you want to allow HTTPD scripts and modules to connect to cobbler over the network, you must turn on the httpd_can_network_connect_cobbler boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_network_connect_cobbler 1

.EE

.PP
If you want to allow HTTPD scripts and modules to connect to databases over the network, you must turn on the httpd_can_network_connect_db boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_network_connect_db 1

.EE

.PP
If you want to allow httpd to connect to memcache server, you must turn on the httpd_can_network_memcache boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_network_memcache 1

.EE

.PP
If you want to allow httpd to act as a relay, you must turn on the httpd_can_network_relay boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_network_relay 1

.EE

.PP
If you want to allow http daemon to send mail, you must turn on the httpd_can_sendmail boolean. Disabled by default.

.EX
.B setsebool -P httpd_can_sendmail 1

.EE

.PP
If you want to allow Apache to communicate with avahi service via dbus, you must turn on the httpd_dbus_avahi boolean. Disabled by default.

.EX
.B setsebool -P httpd_dbus_avahi 1

.EE

.PP
If you want to allow Apache to communicate with sssd service via dbus, you must turn on the httpd_dbus_sssd boolean. Disabled by default.

.EX
.B setsebool -P httpd_dbus_sssd 1

.EE

.PP
If you want to allow httpd cgi support, you must turn on the httpd_enable_cgi boolean. Enabled by default.

.EX
.B setsebool -P httpd_enable_cgi 1

.EE

.PP
If you want to allow httpd to act as a FTP server by listening on the ftp port, you must turn on the httpd_enable_ftp_server boolean. Disabled by default.

.EX
.B setsebool -P httpd_enable_ftp_server 1

.EE

.PP
If you want to allow httpd to read home directories, you must turn on the httpd_enable_homedirs boolean. Disabled by default.

.EX
.B setsebool -P httpd_enable_homedirs 1

.EE

.PP
If you want to allow httpd scripts and modules execmem/execstack, you must turn on the httpd_execmem boolean. Disabled by default.

.EX
.B setsebool -P httpd_execmem 1

.EE

.PP
If you want to allow HTTPD to connect to port 80 for graceful shutdown, you must turn on the httpd_graceful_shutdown boolean. Disabled by default.

.EX
.B setsebool -P httpd_graceful_shutdown 1

.EE

.PP
If you want to allow httpd processes to manage IPA content, you must turn on the httpd_manage_ipa boolean. Disabled by default.

.EX
.B setsebool -P httpd_manage_ipa 1

.EE

.PP
If you want to allow Apache to use mod_auth_ntlm_winbind, you must turn on the httpd_mod_auth_ntlm_winbind boolean. Disabled by default.

.EX
.B setsebool -P httpd_mod_auth_ntlm_winbind 1

.EE

.PP
If you want to allow Apache to use mod_auth_pam, you must turn on the httpd_mod_auth_pam boolean. Disabled by default.

.EX
.B setsebool -P httpd_mod_auth_pam 1

.EE

.PP
If you want to allow httpd to read user content, you must turn on the httpd_read_user_content boolean. Disabled by default.

.EX
.B setsebool -P httpd_read_user_content 1

.EE

.PP
If you want to allow httpd processes to run IPA helper, you must turn on the httpd_run_ipa boolean. Disabled by default.

.EX
.B setsebool -P httpd_run_ipa 1

.EE

.PP
If you want to allow Apache to run preupgrade, you must turn on the httpd_run_preupgrade boolean. Disabled by default.

.EX
.B setsebool -P httpd_run_preupgrade 1

.EE

.PP
If you want to allow Apache to run in stickshift mode, not transition to passenger, you must turn on the httpd_run_stickshift boolean. Disabled by default.

.EX
.B setsebool -P httpd_run_stickshift 1

.EE

.PP
If you want to allow HTTPD scripts and modules to server cobbler files, you must turn on the httpd_serve_cobbler_files boolean. Disabled by default.

.EX
.B setsebool -P httpd_serve_cobbler_files 1

.EE

.PP
If you want to allow httpd daemon to change its resource limits, you must turn on the httpd_setrlimit boolean. Disabled by default.

.EX
.B setsebool -P httpd_setrlimit 1

.EE

.PP
If you want to allow HTTPD to run SSI executables in the same domain as system CGI scripts, you must turn on the httpd_ssi_exec boolean. Disabled by default.

.EX
.B setsebool -P httpd_ssi_exec 1

.EE

.PP
If you want to unify HTTPD to communicate with the terminal. Needed for entering the passphrase for certificates at the terminal, you must turn on the httpd_tty_comm boolean. Disabled by default.

.EX
.B setsebool -P httpd_tty_comm 1

.EE

.PP
If you want to allow httpd to access cifs file systems, you must turn on the httpd_use_cifs boolean. Disabled by default.

.EX
.B setsebool -P httpd_use_cifs 1

.EE

.PP
If you want to allow httpd to access FUSE file systems, you must turn on the httpd_use_fusefs boolean. Disabled by default.

.EX
.B setsebool -P httpd_use_fusefs 1

.EE

.PP
If you want to allow httpd to access nfs file systems, you must turn on the httpd_use_nfs boolean. Disabled by default.

.EX
.B setsebool -P httpd_use_nfs 1

.EE

.PP
If you want to allow httpd to use opencryptoki, you must turn on the httpd_use_opencryptoki boolean. Disabled by default.

.EX
.B setsebool -P httpd_use_opencryptoki 1

.EE

.PP
If you want to allow httpd to access openstack ports, you must turn on the httpd_use_openstack boolean. Disabled by default.

.EX
.B setsebool -P httpd_use_openstack 1

.EE

.PP
If you want to allow httpd to connect to  sasl, you must turn on the httpd_use_sasl boolean. Disabled by default.

.EX
.B setsebool -P httpd_use_sasl 1

.EE

.PP
If you want to allow Apache to query NS records, you must turn on the httpd_verify_dns boolean. Disabled by default.

.EX
.B setsebool -P httpd_verify_dns 1

.EE

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server, you must turn on the authlogin_nsswitch_use_ldap boolean. Disabled by default.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1

.EE

.PP
If you want to deny any process from ptracing or debugging any other processes, you must turn on the deny_ptrace boolean. Disabled by default.

.EX
.B setsebool -P deny_ptrace 1

.EE

.PP
If you want to allow all domains to execute in fips_mode, you must turn on the fips_mode boolean. Enabled by default.

.EX
.B setsebool -P fips_mode 1

.EE

.PP
If you want to determine whether Git system daemon can access cifs file systems, you must turn on the git_system_use_cifs boolean. Disabled by default.

.EX
.B setsebool -P git_system_use_cifs 1

.EE

.PP
If you want to determine whether Git system daemon can access nfs file systems, you must turn on the git_system_use_nfs boolean. Disabled by default.

.EX
.B setsebool -P git_system_use_nfs 1

.EE

.PP
If you want to allow confined applications to run with kerberos, you must turn on the kerberos_enabled boolean. Enabled by default.

.EX
.B setsebool -P kerberos_enabled 1

.EE

.PP
If you want to allow system to run with NIS, you must turn on the nis_enabled boolean. Disabled by default.

.EX
.B setsebool -P nis_enabled 1

.EE

.PP
If you want to allow confined applications to use nscd shared memory, you must turn on the nscd_use_shm boolean. Enabled by default.

.EX
.B setsebool -P nscd_use_shm 1

.EE

.SH NSSWITCH DOMAIN

.PP
If you want to allow users to resolve user passwd entries directly from ldap rather then using a sssd server for the httpd_t, you must turn on the authlogin_nsswitch_use_ldap boolean.

.EX
.B setsebool -P authlogin_nsswitch_use_ldap 1
.EE

.PP
If you want to allow confined applications to run with kerberos for the httpd_t, you must turn on the kerberos_enabled boolean.

.EX
.B setsebool -P kerberos_enabled 1
.EE

.SH PORT TYPES
SELinux defines port types to represent TCP and UDP ports.
.PP
You can see the types associated with a port by using the following command:

.B semanage port -l

.PP
Policy governs the access confined processes have to these ports.
SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
.PP
The following port types are defined for httpd:

.EX
.TP 5
.B http_cache_port_t
.TP 10
.EE


Default Defined Ports:
tcp 8080,8118,8123,10001-10010
.EE
udp 3130
.EE

.EX
.TP 5
.B http_port_t
.TP 10
.EE


Default Defined Ports:
tcp 80,81,443,488,8008,8009,8443,9000
.EE
.SH "MANAGED FILES"

The SELinux process type httpd_t can manage files labeled with the following file types.  The paths listed are the default paths for these file types.  Note the processes UID still need to have DAC permissions.

.br
.B abrt_retrace_spool_t

	/var/spool/faf(/.*)?
.br
	/var/spool/abrt-retrace(/.*)?
.br
	/var/spool/retrace-server(/.*)?
.br

.br
.B anon_inodefs_t


.br
.B apcupsd_cgi_rw_content_t


.br
.B awstats_rw_content_t


.br
.B bugzilla_rw_content_t

	/var/lib/bugzilla(/.*)?
.br

.br
.B cifs_t


.br
.B cluster_conf_t

	/etc/cluster(/.*)?
.br

.br
.B cluster_var_lib_t

	/var/lib/pcsd(/.*)?
.br
	/var/lib/cluster(/.*)?
.br
	/var/lib/openais(/.*)?
.br
	/var/lib/pengine(/.*)?
.br
	/var/lib/corosync(/.*)?
.br
	/usr/lib/heartbeat(/.*)?
.br
	/var/lib/heartbeat(/.*)?
.br
	/var/lib/pacemaker(/.*)?
.br

.br
.B cluster_var_run_t

	/var/run/crm(/.*)?
.br
	/var/run/cman_.*
.br
	/var/run/rsctmp(/.*)?
.br
	/var/run/aisexec.*
.br
	/var/run/heartbeat(/.*)?
.br
	/var/run/pcsd-ruby.socket
.br
	/var/run/corosync-qnetd(/.*)?
.br
	/var/run/corosync-qdevice(/.*)?
.br
	/var/run/corosync\.pid
.br
	/var/run/cpglockd\.pid
.br
	/var/run/rgmanager\.pid
.br
	/var/run/cluster/rgmanager\.sk
.br

.br
.B cobbler_var_lib_t

	/var/lib/cobbler(/.*)?
.br
	/var/www/cobbler(/.*)?
.br
	/var/cache/cobbler(/.*)?
.br
	/var/lib/tftpboot/etc(/.*)?
.br
	/var/lib/tftpboot/ppc(/.*)?
.br
	/var/lib/tftpboot/boot(/.*)?
.br
	/var/lib/tftpboot/grub(/.*)?
.br
	/var/lib/tftpboot/s390x(/.*)?
.br
	/var/lib/tftpboot/images(/.*)?
.br
	/var/lib/tftpboot/aarch64(/.*)?
.br
	/var/lib/tftpboot/images2(/.*)?
.br
	/var/lib/tftpboot/pxelinux\.cfg(/.*)?
.br
	/var/lib/tftpboot/yaboot
.br
	/var/lib/tftpboot/memdisk
.br
	/var/lib/tftpboot/menu\.c32
.br
	/var/lib/tftpboot/pxelinux\.0
.br

.br
.B collectd_rw_content_t


.br
.B cvs_rw_content_t


.br
.B dirsrv_config_t

	/etc/dirsrv(/.*)?
.br

.br
.B dirsrv_var_log_t

	/var/log/dirsrv(/.*)?
.br

.br
.B dirsrv_var_run_t

	/var/run/slapd.*
.br
	/var/run/dirsrv(/.*)?
.br

.br
.B dirsrvadmin_config_t

	/etc/dirsrv/dsgw(/.*)?
.br
	/etc/dirsrv/admin-serv(/.*)?
.br

.br
.B dirsrvadmin_rw_content_t


.br
.B dirsrvadmin_tmp_t


.br
.B dspam_rw_content_t

	/var/lib/dspam/data(/.*)?
.br

.br
.B fusefs_t

	/var/run/user/[^/]*/gvfs
.br

.br
.B git_rw_content_t

	/var/cache/cgit(/.*)?
.br
	/var/cache/gitweb-caching(/.*)?
.br

.br
.B httpd_cache_t

	/var/cache/rt(3|4)(/.*)?
.br
	/var/cache/ssl.*\.sem
.br
	/var/cache/mod_.*
.br
	/var/cache/php-.*
.br
	/var/cache/httpd(/.*)?
.br
	/var/cache/mason(/.*)?
.br
	/var/cache/mod_ssl(/.*)?
.br
	/var/cache/lighttpd(/.*)?
.br
	/var/cache/mediawiki(/.*)?
.br
	/var/cache/mod_proxy(/.*)?
.br
	/var/cache/mod_gnutls(/.*)?
.br
	/var/cache/php-mmcache(/.*)?
.br
	/var/cache/php-eaccelerator(/.*)?
.br

.br
.B httpd_lock_t


.br
.B httpd_squirrelmail_t

	/var/lib/squirrelmail/prefs(/.*)?
.br

.br
.B httpd_sys_rw_content_t

	/etc/rt(/.*)?
.br
	/etc/glpi(/.*)?
.br
	/etc/horde(/.*)?
.br
	/etc/drupal.*
.br
	/etc/z-push(/.*)?
.br
	/var/lib/svn(/.*)?
.br
	/var/www/svn(/.*)?
.br
	/etc/owncloud(/.*)?
.br
	/var/www/html(/.*)?/uploads(/.*)?
.br
	/var/www/html(/.*)?/wp-content(/.*)?
.br
	/var/www/html(/.*)?/wp_backups(/.*)?
.br
	/var/www/html(/.*)?/sites/default/files(/.*)?
.br
	/var/www/html(/.*)?/sites/default/settings\.php
.br
	/etc/mock/koji(/.*)?
.br
	/etc/nextcloud(/.*)?
.br
	/var/lib/drupal.*
.br
	/etc/zabbix/web(/.*)?
.br
	/var/lib/moodle(/.*)?
.br
	/var/log/z-push(/.*)?
.br
	/var/spool/gosa(/.*)?
.br
	/etc/WebCalendar(/.*)?
.br
	/usr/share/joomla(/.*)?
.br
	/var/lib/dokuwiki(/.*)?
.br
	/var/lib/owncloud(/.*)?
.br
	/var/spool/viewvc(/.*)?
.br
	/var/lib/nextcloud(/.*)?
.br
	/var/lib/pootle/po(/.*)?
.br
	/var/lib/phpMyAdmin(/.*)?
.br
	/var/www/moodledata(/.*)?
.br
	/srv/gallery2/smarty(/.*)?
.br
	/var/www/moodle/data(/.*)?
.br
	/var/lib/graphite-web(/.*)?
.br
	/var/log/shibboleth-www(/.*)?
.br
	/var/www/gallery/albums(/.*)?
.br
	/var/www/html/owncloud/data(/.*)?
.br
	/var/www/html/nextcloud/data(/.*)?
.br
	/usr/share/wordpress-mu/wp-content(/.*)?
.br
	/usr/share/wordpress/wp-content/upgrade(/.*)?
.br
	/usr/share/wordpress/wp-content/uploads(/.*)?
.br
	/var/www/html/configuration\.php
.br

.br
.B httpd_tmp_t

	/var/run/user/apache(/.*)?
.br
	/var/www/openshift/console/tmp(/.*)?
.br

.br
.B httpd_tmpfs_t


.br
.B httpd_user_rw_content_t


.br
.B httpd_var_lib_t

	/var/lib/rt(3|4)/data/RT-Shredder(/.*)?
.br
	/var/lib/dav(/.*)?
.br
	/var/lib/php(/.*)?
.br
	/var/lib/glpi(/.*)?
.br
	/var/lib/httpd(/.*)?
.br
	/var/lib/nginx(/.*)?
.br
	/var/lib/z-push(/.*)?
.br
	/var/lib/ganglia(/.*)?
.br
	/var/lib/ipsilon(/.*)?
.br
	/var/lib/cherokee(/.*)?
.br
	/var/lib/lighttpd(/.*)?
.br
	/var/lib/mod_security(/.*)?
.br
	/var/lib/roundcubemail(/.*)?
.br
	/var/opt/rh/rh-nginx18/lib/nginx(/.*)?
.br

.br
.B httpd_var_run_t

	/var/run/wsgi.*
.br
	/var/run/mod_.*
.br
	/var/run/httpd.*
.br
	/var/run/nginx.*
.br
	/var/run/apache.*
.br
	/var/run/php-fpm(/.*)?
.br
	/var/run/fcgiwrap(/.*)?
.br
	/var/run/lighttpd(/.*)?
.br
	/var/lib/php/session(/.*)?
.br
	/var/lib/php/wsdlcache(/.*)?
.br
	/var/run/dirsrv/admin-serv.*
.br
	/var/opt/rh/rh-nginx18/run/nginx(/.*)?
.br
	/var/www/openshift/broker/httpd/run(/.*)?
.br
	/var/www/openshift/console/httpd/run(/.*)?
.br
	/opt/dirsrv/var/run/dirsrv/dsgw/cookies(/.*)?
.br
	/var/run/thttpd\.pid
.br
	/var/run/gcache_port
.br
	/var/run/cherokee\.pid
.br

.br
.B httpdcontent


.br
.B hugetlbfs_t

	/dev/hugepages
.br
	/usr/lib/udev/devices/hugepages
.br

.br
.B jetty_cache_t

	/var/cache/jetty(/.*)?
.br

.br
.B jetty_log_t

	/var/log/jetty(/.*)?
.br

.br
.B jetty_tmp_t


.br
.B jetty_unit_file_t

	/usr/lib/systemd/system/jetty\.service
.br

.br
.B jetty_var_lib_t

	/var/lib/jetty(/.*)?
.br

.br
.B jetty_var_run_t

	/var/run/jetty(/.*)?
.br

.br
.B keystone_cgi_rw_content_t


.br
.B krb5_host_rcache_t

	/var/tmp/krb5_0.rcache2
.br
	/var/cache/krb5rcache(/.*)?
.br
	/var/tmp/nfs_0
.br
	/var/tmp/DNS_25
.br
	/var/tmp/host_0
.br
	/var/tmp/imap_0
.br
	/var/tmp/HTTP_23
.br
	/var/tmp/HTTP_48
.br
	/var/tmp/ldap_55
.br
	/var/tmp/ldap_487
.br
	/var/tmp/ldapmap1_0
.br

.br
.B man2html_rw_content_t

	/var/cache/man2html(/.*)?
.br

.br
.B mediawiki_rw_content_t

	/var/www/wiki[0-9]?(/.*)?
.br

.br
.B memcached_var_run_t

	/var/run/memcached(/.*)?
.br
	/var/run/ipa_memcached(/.*)?
.br

.br
.B mirrormanager_var_run_t

	/var/run/mirrormanager(/.*)?
.br

.br
.B mojomojo_rw_content_t

	/var/lib/mojomojo(/.*)?
.br

.br
.B munin_rw_content_t


.br
.B mythtv_rw_content_t


.br
.B nagios_rw_content_t


.br
.B named_cache_t

	/var/named/data(/.*)?
.br
	/var/lib/softhsm(/.*)?
.br
	/var/lib/unbound(/.*)?
.br
	/var/named/slaves(/.*)?
.br
	/var/named/dynamic(/.*)?
.br
	/var/named/chroot/var/tmp(/.*)?
.br
	/var/named/chroot/var/named/data(/.*)?
.br
	/var/named/chroot/var/named/slaves(/.*)?
.br
	/var/named/chroot/var/named/dynamic(/.*)?
.br

.br
.B nfs_t


.br
.B nutups_cgi_rw_content_t


.br
.B openshift_rw_content_t


.br
.B passenger_tmp_t


.br
.B passenger_var_lib_t

	/var/lib/passenger(/.*)?
.br

.br
.B passenger_var_run_t

	/var/run/passenger(/.*)?
.br

.br
.B pkcs_slotd_lock_t

	/var/lock/opencryptoki(/.*)?
.br

.br
.B pkcs_slotd_var_lib_t

	/var/lib/opencryptoki(/.*)?
.br

.br
.B pki_apache_config


.br
.B pki_apache_var_lib


.br
.B pki_apache_var_log


.br
.B postfix_spool_t

	/var/spool/postfix.*
.br
	/var/spool/postfix/defer(/.*)?
.br
	/var/spool/postfix/flush(/.*)?
.br
	/var/spool/postfix/deferred(/.*)?
.br
	/var/spool/postfix/maildrop(/.*)?
.br

.br
.B preupgrade_data_t

	/var/lib/preupgrade(/.*)?
.br
	/var/log/preupgrade(/.*)?
.br

.br
.B prewikka_rw_content_t


.br
.B public_content_rw_t

	/var/spool/abrt-upload(/.*)?
.br

.br
.B root_t

	/sysroot/ostree/deploy/.*-atomic/deploy(/.*)?
.br
	/
.br
	/initrd
.br

.br
.B security_t

	/selinux
.br

.br
.B smokeping_cgi_rw_content_t


.br
.B squid_rw_content_t


.br
.B squirrelmail_spool_t

	/var/spool/squirrelmail(/.*)?
.br

.br
.B systemd_passwd_var_run_t

	/var/run/systemd/ask-password(/.*)?
.br
	/var/run/systemd/ask-password-block(/.*)?
.br

.br
.B w3c_validator_rw_content_t


.br
.B webalizer_rw_content_t

	/var/www/usage(/.*)?
.br

.br
.B zarafa_var_lib_t

	/var/lib/zarafa(/.*)?
.br
	/var/lib/zarafa-webapp(/.*)?
.br
	/var/lib/zarafa-webaccess(/.*)?
.br

.br
.B zoneminder_rw_content_t


.br
.B zoneminder_var_lib_t

	/var/lib/zoneminder(/.*)?
.br

.SH FILE CONTEXTS
SELinux requires files to have an extended attribute to define the file type.
.PP
You can see the context of a file using the \fB\-Z\fP option to \fBls\bP
.PP
Policy governs the access confined processes have to these files.
SELinux httpd policy is very flexible allowing users to setup their httpd processes in as secure a method as possible.
.PP

.PP
.B EQUIVALENCE DIRECTORIES

.PP
httpd policy stores data with multiple different file context types under the /var/lib/php directory.  If you would like to store the data in a different directory you can use the semanage command to create an equivalence mapping.  If you wanted to store this data under the /srv dirctory you would execute the following command:
.PP
.B semanage fcontext -a -e /var/lib/php /srv/php
.br
.B restorecon -R -v /srv/php
.PP

.PP
httpd policy stores data with multiple different file context types under the /var/www directory.  If you would like to store the data in a different directory you can use the semanage command to create an equivalence mapping.  If you wanted to store this data under the /srv dirctory you would execute the following command:
.PP
.B semanage fcontext -a -e /var/www /srv/www
.br
.B restorecon -R -v /srv/www
.PP

.PP
.B STANDARD FILE CONTEXT

SELinux defines the file context types for the httpd, if you wanted to
store files with these types in a diffent paths, you need to execute the semanage command to sepecify alternate labeling and then use restorecon to put the labels on disk.

.B semanage fcontext -a -t httpd_var_run_t '/srv/myhttpd_content(/.*)?'
.br
.B restorecon -R -v /srv/myhttpd_content

Note: SELinux often uses regular expressions to specify labels that match multiple files.

.I The following file types are defined for httpd:


.EX
.PP
.B httpd_cache_t
.EE

- Set files with the httpd_cache_t type, if you want to store the files under the /var/cache directory.

.br
.TP 5
Paths:
/var/cache/rt(3|4)(/.*)?, /var/cache/ssl.*\.sem, /var/cache/mod_.*, /var/cache/php-.*, /var/cache/httpd(/.*)?, /var/cache/mason(/.*)?, /var/cache/mod_ssl(/.*)?, /var/cache/lighttpd(/.*)?, /var/cache/mediawiki(/.*)?, /var/cache/mod_proxy(/.*)?, /var/cache/mod_gnutls(/.*)?, /var/cache/php-mmcache(/.*)?, /var/cache/php-eaccelerator(/.*)?

.EX
.PP
.B httpd_config_t
.EE

- Set files with the httpd_config_t type, if you want to treat the files as httpd configuration data, usually stored under the /etc directory.

.br
.TP 5
Paths:
/etc/caddy(/.*)?, /etc/httpd(/.*)?, /etc/nginx(/.*)?, /etc/apache(2)?(/.*)?, /etc/cherokee(/.*)?, /etc/lighttpd(/.*)?, /etc/apache-ssl(2)?(/.*)?, /var/lib/openshift/\.httpd\.d(/.*)?, /etc/opt/rh/rh-nginx18/nginx(/.*)?, /var/lib/stickshift/\.httpd\.d(/.*)?, /etc/vhosts, /etc/thttpd\.conf

.EX
.PP
.B httpd_exec_t
.EE

- Set files with the httpd_exec_t type, if you want to transition an executable to the httpd_t domain.

.br
.TP 5
Paths:
/usr/sbin/httpd(\.worker)?, /usr/sbin/apache(2)?, /usr/lib/apache-ssl/.+, /usr/sbin/apache-ssl(2)?, /usr/bin/caddy, /usr/sbin/nginx, /usr/sbin/thttpd, /usr/sbin/php-fpm, /usr/sbin/cherokee, /usr/sbin/lighttpd, /usr/sbin/httpd\.event, /usr/bin/mongrel_rails, /usr/sbin/htcacheclean

.EX
.PP
.B httpd_helper_exec_t
.EE

- Set files with the httpd_helper_exec_t type, if you want to transition an executable to the httpd_helper_t domain.


.EX
.PP
.B httpd_initrc_exec_t
.EE

- Set files with the httpd_initrc_exec_t type, if you want to transition an executable to the httpd_initrc_t domain.

.br
.TP 5
Paths:
/etc/init\.d/cherokee, /etc/rc\.d/init\.d/httpd, /etc/rc\.d/init\.d/lighttpd

.EX
.PP
.B httpd_keytab_t
.EE

- Set files with the httpd_keytab_t type, if you want to treat the files as kerberos keytab files.


.EX
.PP
.B httpd_lock_t
.EE

- Set files with the httpd_lock_t type, if you want to treat the files as httpd lock data, stored under the /var/lock directory


.EX
.PP
.B httpd_log_t
.EE

- Set files with the httpd_log_t type, if you want to treat the data as httpd log data, usually stored under the /var/log directory.

.br
.TP 5
Paths:
/srv/([^/]*/)?www/logs(/.*)?, /var/www(/.*)?/logs(/.*)?, /var/log/glpi(/.*)?, /var/log/cacti(/.*)?, /var/log/httpd(/.*)?, /var/log/nginx(/.*)?, /var/log/apache(2)?(/.*)?, /var/log/horizon(/.*)?, /var/log/php-fpm(/.*)?, /var/log/cherokee(/.*)?, /var/log/lighttpd(/.*)?, /var/log/suphp\.log.*, /var/log/thttpd\.log.*, /var/log/apache-ssl(2)?(/.*)?, /var/log/cgiwrap\.log.*, /var/www/stickshift/[^/]*/log(/.*)?, /var/log/graphite-web(/.*)?, /var/www/miq/vmdb/log(/.*)?, /var/log/roundcubemail(/.*)?, /var/log/php_errors\.log.*, /var/log/dirsrv/admin-serv(/.*)?, /var/opt/rh/rh-nginx18/log(/.*)?, /var/lib/openshift/\.log/httpd(/.*)?, /var/www/openshift/console/log(/.*)?, /var/www/openshift/broker/httpd/logs(/.*)?, /var/www/openshift/console/httpd/logs(/.*)?

.EX
.PP
.B httpd_modules_t
.EE

- Set files with the httpd_modules_t type, if you want to treat the files as httpd modules.

.br
.TP 5
Paths:
/usr/lib/httpd(/.*)?, /var/lib/caddy(/.*)?, /usr/lib/apache(/.*)?, /usr/lib/cherokee(/.*)?, /usr/lib/lighttpd(/.*)?, /usr/lib/apache2/modules(/.*)?

.EX
.PP
.B httpd_passwd_exec_t
.EE

- Set files with the httpd_passwd_exec_t type, if you want to transition an executable to the httpd_passwd_t domain.


.EX
.PP
.B httpd_php_exec_t
.EE

- Set files with the httpd_php_exec_t type, if you want to transition an executable to the httpd_php_t domain.


.EX
.PP
.B httpd_php_tmp_t
.EE

- Set files with the httpd_php_tmp_t type, if you want to store httpd php temporary files in the /tmp directories.


.EX
.PP
.B httpd_rotatelogs_exec_t
.EE

- Set files with the httpd_rotatelogs_exec_t type, if you want to transition an executable to the httpd_rotatelogs_t domain.


.EX
.PP
.B httpd_squirrelmail_t
.EE

- Set files with the httpd_squirrelmail_t type, if you want to treat the files as httpd squirrelmail data.


.EX
.PP
.B httpd_suexec_exec_t
.EE

- Set files with the httpd_suexec_exec_t type, if you want to transition an executable to the httpd_suexec_t domain.

.br
.TP 5
Paths:
/usr/lib/apache(2)?/suexec(2)?, /usr/lib/cgi-bin/(nph-)?cgiwrap(d)?, /usr/sbin/suexec

.EX
.PP
.B httpd_suexec_tmp_t
.EE

- Set files with the httpd_suexec_tmp_t type, if you want to store httpd suexec temporary files in the /tmp directories.


.EX
.PP
.B httpd_sys_content_t
.EE

- Set files with the httpd_sys_content_t type, if you want to treat the files as httpd sys content.

.br
.TP 5
Paths:
/srv/([^/]*/)?www(/.*)?, /var/www(/.*)?, /etc/htdig(/.*)?, /srv/gallery2(/.*)?, /var/lib/trac(/.*)?, /var/lib/htdig(/.*)?, /var/www/icons(/.*)?, /usr/share/glpi(/.*)?, /usr/share/htdig(/.*)?, /usr/share/drupal.*, /usr/share/z-push(/.*)?, /var/www/svn/conf(/.*)?, /usr/share/icecast(/.*)?, /var/lib/cacti/rra(/.*)?, /usr/share/ntop/html(/.*)?, /usr/share/nginx/html(/.*)?, /usr/share/doc/ghc/html(/.*)?, /usr/share/openca/htdocs(/.*)?, /usr/share/selinux-policy[^/]*/html(/.*)?

.EX
.PP
.B httpd_sys_htaccess_t
.EE

- Set files with the httpd_sys_htaccess_t type, if you want to treat the file as a httpd sys access file.


.EX
.PP
.B httpd_sys_ra_content_t
.EE

- Set files with the httpd_sys_ra_content_t type, if you want to treat the files as httpd sys read/append content.


.EX
.PP
.B httpd_sys_rw_content_t
.EE

- Set files with the httpd_sys_rw_content_t type, if you want to treat the files as httpd sys read/write content.

.br
.TP 5
Paths:
/etc/rt(/.*)?, /etc/glpi(/.*)?, /etc/horde(/.*)?, /etc/drupal.*, /etc/z-push(/.*)?, /var/lib/svn(/.*)?, /var/www/svn(/.*)?, /etc/owncloud(/.*)?, /var/www/html(/.*)?/uploads(/.*)?, /var/www/html(/.*)?/wp-content(/.*)?, /var/www/html(/.*)?/wp_backups(/.*)?, /var/www/html(/.*)?/sites/default/files(/.*)?, /var/www/html(/.*)?/sites/default/settings\.php, /etc/mock/koji(/.*)?, /etc/nextcloud(/.*)?, /var/lib/drupal.*, /etc/zabbix/web(/.*)?, /var/lib/moodle(/.*)?, /var/log/z-push(/.*)?, /var/spool/gosa(/.*)?, /etc/WebCalendar(/.*)?, /usr/share/joomla(/.*)?, /var/lib/dokuwiki(/.*)?, /var/lib/owncloud(/.*)?, /var/spool/viewvc(/.*)?, /var/lib/nextcloud(/.*)?, /var/lib/pootle/po(/.*)?, /var/lib/phpMyAdmin(/.*)?, /var/www/moodledata(/.*)?, /srv/gallery2/smarty(/.*)?, /var/www/moodle/data(/.*)?, /var/lib/graphite-web(/.*)?, /var/log/shibboleth-www(/.*)?, /var/www/gallery/albums(/.*)?, /var/www/html/owncloud/data(/.*)?, /var/www/html/nextcloud/data(/.*)?, /usr/share/wordpress-mu/wp-content(/.*)?, /usr/share/wordpress/wp-content/upgrade(/.*)?, /usr/share/wordpress/wp-content/uploads(/.*)?, /var/www/html/configuration\.php

.EX
.PP
.B httpd_sys_script_exec_t
.EE

- Set files with the httpd_sys_script_exec_t type, if you want to transition an executable to the httpd_sys_script_t domain.

.br
.TP 5
Paths:
/opt/.*\.cgi, /usr/.*\.cgi, /var/www/[^/]*/cgi-bin(/.*)?, /var/www/perl(/.*)?, /var/www/html/[^/]*/cgi-bin(/.*)?, /usr/lib/cgi-bin(/.*)?, /var/www/cgi-bin(/.*)?, /var/www/svn/hooks(/.*)?, /usr/share/wordpress/.*\.php, /usr/local/nagios/sbin(/.*)?, /usr/share/wordpress/wp-includes/.*\.php, /usr/share/wordpress-mu/wp-config\.php

.EX
.PP
.B httpd_tmp_t
.EE

- Set files with the httpd_tmp_t type, if you want to store httpd temporary files in the /tmp directories.

.br
.TP 5
Paths:
/var/run/user/apache(/.*)?, /var/www/openshift/console/tmp(/.*)?

.EX
.PP
.B httpd_tmpfs_t
.EE

- Set files with the httpd_tmpfs_t type, if you want to store httpd files on a tmpfs file system.


.EX
.PP
.B httpd_unconfined_script_exec_t
.EE

- Set files with the httpd_unconfined_script_exec_t type, if you want to transition an executable to the httpd_unconfined_script_t domain.


.EX
.PP
.B httpd_unit_file_t
.EE

- Set files with the httpd_unit_file_t type, if you want to treat the files as httpd unit content.

.br
.TP 5
Paths:
/usr/lib/systemd/system/httpd.*, /usr/lib/systemd/system/nginx.*, /usr/lib/systemd/system/thttpd.*, /usr/lib/systemd/system/php-fpm.*

.EX
.PP
.B httpd_user_content_t
.EE

- Set files with the httpd_user_content_t type, if you want to treat the files as httpd user content.


.EX
.PP
.B httpd_user_htaccess_t
.EE

- Set files with the httpd_user_htaccess_t type, if you want to treat the file as a httpd user access file.


.EX
.PP
.B httpd_user_ra_content_t
.EE

- Set files with the httpd_user_ra_content_t type, if you want to treat the files as httpd user read/append content.


.EX
.PP
.B httpd_user_rw_content_t
.EE

- Set files with the httpd_user_rw_content_t type, if you want to treat the files as httpd user read/write content.


.EX
.PP
.B httpd_user_script_exec_t
.EE

- Set files with the httpd_user_script_exec_t type, if you want to transition an executable to the httpd_user_script_t domain.


.EX
.PP
.B httpd_var_lib_t
.EE

- Set files with the httpd_var_lib_t type, if you want to store the httpd files under the /var/lib directory.

.br
.TP 5
Paths:
/var/lib/rt(3|4)/data/RT-Shredder(/.*)?, /var/lib/dav(/.*)?, /var/lib/php(/.*)?, /var/lib/glpi(/.*)?, /var/lib/httpd(/.*)?, /var/lib/nginx(/.*)?, /var/lib/z-push(/.*)?, /var/lib/ganglia(/.*)?, /var/lib/ipsilon(/.*)?, /var/lib/cherokee(/.*)?, /var/lib/lighttpd(/.*)?, /var/lib/mod_security(/.*)?, /var/lib/roundcubemail(/.*)?, /var/opt/rh/rh-nginx18/lib/nginx(/.*)?

.EX
.PP
.B httpd_var_run_t
.EE

- Set files with the httpd_var_run_t type, if you want to store the httpd files under the /run or /var/run directory.

.br
.TP 5
Paths:
/var/run/wsgi.*, /var/run/mod_.*, /var/run/httpd.*, /var/run/nginx.*, /var/run/apache.*, /var/run/php-fpm(/.*)?, /var/run/fcgiwrap(/.*)?, /var/run/lighttpd(/.*)?, /var/lib/php/session(/.*)?, /var/lib/php/wsdlcache(/.*)?, /var/run/dirsrv/admin-serv.*, /var/opt/rh/rh-nginx18/run/nginx(/.*)?, /var/www/openshift/broker/httpd/run(/.*)?, /var/www/openshift/console/httpd/run(/.*)?, /opt/dirsrv/var/run/dirsrv/dsgw/cookies(/.*)?, /var/run/thttpd\.pid, /var/run/gcache_port, /var/run/cherokee\.pid

.PP
Note: File context can be temporarily modified with the chcon command.  If you want to permanently change the file context you need to use the
.B semanage fcontext
command.  This will modify the SELinux labeling database.  You will need to use
.B restorecon
to apply the labels.

.SH SHARING FILES
If you want to share files with multiple domains (Apache, FTP, rsync, Samba), you can set a file context of public_content_t and public_content_rw_t.  These context allow any of the above domains to read the content.  If you want a particular domain to write to the public_content_rw_t domain, you must set the appropriate boolean.
.TP
Allow httpd servers to read the /var/httpd directory by adding the public_content_t file type to the directory and by restoring the file type.
.PP
.B
semanage fcontext -a -t public_content_t "/var/httpd(/.*)?"
.br
.B restorecon -F -R -v /var/httpd
.pp
.TP
Allow httpd servers to read and write /var/httpd/incoming by adding the public_content_rw_t type to the directory and by restoring the file type.  You also need to turn on the httpd_anon_write boolean.
.PP
.B
semanage fcontext -a -t public_content_rw_t "/var/httpd/incoming(/.*)?"
.br
.B restorecon -F -R -v /var/httpd/incoming
.br
.B setsebool -P httpd_anon_write 1

.PP
If you want to allow Apache to modify public files used for public file transfer services. Directories/Files must be labeled public_content_rw_t., you must turn on the httpd_anon_write boolean.

.EX
.B setsebool -P httpd_anon_write 1
.EE

.SH "COMMANDS"
.B semanage fcontext
can also be used to manipulate default file context mappings.
.PP
.B semanage permissive
can also be used to manipulate whether or not a process type is permissive.
.PP
.B semanage module
can also be used to enable/disable/install/remove policy modules.

.B semanage port
can also be used to manipulate the port definitions

.B semanage boolean
can also be used to manipulate the booleans

.PP
.B system-config-selinux
is a GUI tool available to customize SELinux policy settings.

.SH AUTHOR
This manual page was auto-generated using
.B "sepolicy manpage".

.SH "SEE ALSO"
selinux(8), httpd(8), semanage(8), restorecon(8), chcon(1), sepolicy(8), setsebool(8), httpd_helper_selinux(8), httpd_passwd_selinux(8), httpd_php_selinux(8), httpd_rotatelogs_selinux(8), httpd_suexec_selinux(8), httpd_sys_script_selinux(8), httpd_unconfined_script_selinux(8), httpd_user_script_selinux(8)